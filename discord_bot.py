"""
Discord bot handlers for the unified MensemBot
"""

import logging
from typing import Optional

import discord
from discord.ext import commands

from unified_config import DISCORD_TOKEN, DISCORD_COMMAND_PREFIX, validate_config
from arizona_api import arizona_api

logger = logging.getLogger(__name__)

class DiscordBot:
    """Discord bot with Arizona RP statistics and basic commands"""
    
    def __init__(self):
        self.bot: Optional[commands.Bot] = None
        self.is_ready = False
        
    def setup(self):
        """Setup Discord bot"""
        if not DISCORD_TOKEN:
            logger.warning("Discord token not provided, Discord bot will not start")
            return False
            
        try:
            # Configure Discord intents
            intents = discord.Intents.default()
            intents.message_content = True
            intents.guilds = True
            
            # Create Discord bot instance
            self.bot = commands.Bot(
                command_prefix=DISCORD_COMMAND_PREFIX,
                intents=intents,
                help_command=None  # We'll use custom help command
            )
            
            self.setup_events()
            self.setup_commands()
            
            logger.info("Discord bot configured successfully")
            return True
            
        except Exception as e:
            logger.error(f"Failed to setup Discord bot: {e}")
            return False
    
    def setup_events(self):
        """Setup Discord bot events"""
        
        @self.bot.event
        async def on_ready():
            self.is_ready = True
            logger.info(f"Discord –±–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {self.bot.user}")
            print(f"ü§ñ Discord –±–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {self.bot.user}")
            
            # Set bot status
            activity = discord.Game(name="!stats <–Ω–∏–∫> <—Å–µ—Ä–≤–µ—Ä> | !help")
            await self.bot.change_presence(activity=activity)
        
        @self.bot.event
        async def on_command_error(ctx: commands.Context, error: Exception):
            """Handle command errors"""
            logger.error(f"Discord command error: {error}")
            
            if isinstance(error, commands.CommandNotFound):
                await ctx.send("‚ùå –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `!help` –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.")
            elif isinstance(error, commands.MissingRequiredArgument):
                await ctx.send("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `!help` –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.")
            elif isinstance(error, commands.BadArgument):
                await ctx.send("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã.")
            else:
                await ctx.send("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.")
    
    def setup_commands(self):
        """Setup Discord bot commands"""
        
        @self.bot.command(name="help", help="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º")
        async def discord_help(ctx: commands.Context):
            """Discord help command"""
            embed = discord.Embed(
                title="ü§ñ MensemBot - –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º",
                color=0x00ff00,
                description="–ú–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç –¥–ª—è Discord –∏ Telegram"
            )
            
            embed.add_field(
                name="üéÆ Arizona RP –∫–æ–º–∞–Ω–¥—ã",
                value="`!stats <–Ω–∏–∫> <ID —Å–µ—Ä–≤–µ—Ä–∞>` - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞\n"
                      "`!servers` - –í—Å–µ —Å–µ—Ä–≤–µ—Ä—ã Arizona RP",
                inline=False
            )
            
            embed.add_field(
                name="‚ÑπÔ∏è –û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã",
                value="`!help` - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
                      "`!about` - –û –±–æ—Ç–µ",
                inline=False
            )
            
            embed.add_field(
                name="üìù –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è",
                value="`!stats PlayerName 1`\n"
                      "`!stats Vlad_Mensem 5`",
                inline=False
            )
            
            embed.set_footer(text="–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã: –ü–ö 1-31, –ú–æ–±–∞–π–ª 101-103")
            
            await ctx.send(embed=embed)
        
        @self.bot.command(name="about", help="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ")
        async def discord_about(ctx: commands.Context):
            """Discord about command"""
            embed = discord.Embed(
                title="ü§ñ MensemBot",
                color=0x0099ff,
                description="–ú–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–æ–º –∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä–æ–∫–æ–≤ Arizona RP"
            )
            
            embed.add_field(
                name="üîß –§—É–Ω–∫—Ü–∏–∏",
                value="‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–æ–≤ Arizona RP\n"
                      "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ–º\n"
                      "‚Ä¢ –ú–æ–¥–µ—Ä–∞—Ü–∏—è —á–∞—Ç–∞\n"
                      "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Discord –∏ Telegram",
                inline=False
            )
            
            embed.add_field(
                name="üëë –°–æ–∑–¥–∞—Ç–µ–ª—å",
                value="@vladlotto",
                inline=True
            )
            
            embed.add_field(
                name="üì± Telegram",
                value="@mensembot",
                inline=True
            )
            
            embed.set_footer(text="–í–µ—Ä—Å–∏—è 2.0 ‚Ä¢ Discord + Telegram")
            
            await ctx.send(embed=embed)
        
        @self.bot.command(name="stats", help="–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–∞ Arizona RP")
        async def discord_stats(ctx: commands.Context, nickname: str = "", server_id: int = 0):
            """Discord stats command handler"""
            
            # Show typing indicator
            async with ctx.typing():
                # Validate arguments
                if not nickname or server_id == 0:
                    embed = discord.Embed(
                        title="‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã!",
                        color=0xff0000,
                        description="**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:** `!stats <–Ω–∏–∫> <ID —Å–µ—Ä–≤–µ—Ä–∞>`"
                    )
                    embed.add_field(
                        name="üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã",
                        value="**–ü–ö:** 1-31\n**–ú–æ–±–∞–π–ª:** 101-103",
                        inline=False
                    )
                    embed.add_field(
                        name="üìù –ü—Ä–∏–º–µ—Ä",
                        value="`!stats PlayerName 1`",
                        inline=False
                    )
                    embed.set_footer(text="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ !servers –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞")
                    await ctx.send(embed=embed)
                    return
                
                # Validate nickname
                is_valid_nick, nick_error = arizona_api.validate_nickname(nickname)
                if not is_valid_nick:
                    embed = discord.Embed(
                        title="‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –Ω–∏–∫–∞",
                        color=0xff0000,
                        description=nick_error
                    )
                    await ctx.send(embed=embed)
                    return
                
                # Validate server ID
                is_valid_server, server_error = arizona_api.validate_server_id(server_id)
                if not is_valid_server:
                    embed = discord.Embed(
                        title="‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞",
                        color=0xff0000,
                        description=server_error
                    )
                    await ctx.send(embed=embed)
                    return
                
                # Fetch statistics
                data, error = await arizona_api.fetch_player_stats(nickname, server_id)
                
                if error:
                    embed = discord.Embed(
                        title="‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö",
                        color=0xff0000,
                        description=error
                    )
                    await ctx.send(embed=embed)
                    return
                
                # Format and send response
                if data is not None:
                    formatted_stats = arizona_api.format_stats(data, nickname, server_id)
                    
                    # Split message if too long for Discord
                    if len(formatted_stats) > 2000:
                        # Send as text file if too long
                        import io
                        stats_file = io.StringIO(formatted_stats)
                        discord_file = discord.File(fp=stats_file, filename=f"{nickname}_stats.txt")
                        
                        embed = discord.Embed(
                            title=f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ {nickname}",
                            color=0x00ff00,
                            description=f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∞—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏.\n–§–∞–π–ª —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω."
                        )
                        await ctx.send(embed=embed, file=discord_file)
                    else:
                        embed = discord.Embed(
                            title=f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ {nickname}",
                            color=0x00ff00,
                            description=formatted_stats
                        )
                        await ctx.send(embed=embed)
                else:
                    embed = discord.Embed(
                        title="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ",
                        color=0xff0000,
                        description="–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∏–∫–∞ –∏ ID —Å–µ—Ä–≤–µ—Ä–∞."
                    )
                    await ctx.send(embed=embed)
        
        @self.bot.command(name="servers", help="–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å–µ—Ä–≤–µ—Ä—ã Arizona RP")
        async def discord_servers(ctx: commands.Context):
            """Discord servers command"""
            embed = discord.Embed(
                title="–°–µ—Ä–≤–µ—Ä—ã Arizona RP:",
                color=0x0099ff
            )
            
            # –ü–ö —Å–µ—Ä–≤–µ—Ä—ã
            pc_servers = " 1: Phoenix\n 2: Tucson\n 3: Scottdale\n 4: Chandler\n 5: Brainburg\n 6: Saint Rose\n 7: Mesa\n 8: Red Rock\n 9: Yuma\n10: Surprise\n11: Prescott\n12: Glendale\n13: Kingman\n14: Winslow\n15: Payson\n16: Gilbert\n17: Show Low\n18: Casa Grande\n19: Page\n20: Sun City\n21: Queen Creek\n22: Sedona\n23: Holiday\n24: Wednesday\n25: Yava\n26: Faraway\n27: Bumble Bee\n28: Christmas\n29: Mirage\n30: Love\n31: Drake"
            embed.add_field(
                name="üíª –ü–ö —Å–µ—Ä–≤–µ—Ä—ã (1-31)",
                value=pc_servers,
                inline=False
            )
            
            # –ú–æ–±–∞–π–ª —Å–µ—Ä–≤–µ—Ä—ã
            embed.add_field(
                name="üì± –ú–æ–±–∞–π–ª —Å–µ—Ä–≤–µ—Ä—ã",
                value="101: Mobile 1\n102: Mobile 2\n103: Mobile 3",
                inline=False
            )
            
            embed.add_field(
                name="üìù –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ",
                value="`!stats <–Ω–∏–∫> <ID —Å–µ—Ä–≤–µ—Ä–∞>`\n**–ü—Ä–∏–º–µ—Ä:** `!stats PlayerName 1`",
                inline=False
            )
            
            await ctx.send(embed=embed)
    
    async def start(self):
        """Start Discord bot"""
        if not self.bot:
            logger.warning("Discord bot not configured, skipping Discord startup")
            return
            
        try:
            logger.info("Starting Discord bot...")
            await self.bot.start(DISCORD_TOKEN)
        except Exception as e:
            logger.error(f"Discord bot error: {e}")
            raise
    
    async def close(self):
        """Close Discord bot"""
        if self.bot:
            try:
                await self.bot.close()
                logger.info("Discord bot closed")
            except Exception as e:
                logger.error(f"Error closing Discord bot: {e}")

# Global Discord bot instance
discord_bot = DiscordBot()