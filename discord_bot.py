import os
import logging
import discord
from discord.ext import commands
from arizona_api import arizona_api
from unified_config import CREATOR_ID, HELP_MESSAGE_USER

# ---------------- LOGGING ---------------- #
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# ---------------- CONFIG ---------------- #
DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")  # Token —á–µ—Ä–µ–∑ environment variable
is_ready = False

# ---------------- BOT SETUP ---------------- #
intents = discord.Intents.default()
intents.messages = True
intents.message_content = True
intents.guilds = True

bot = commands.Bot(command_prefix="!", intents=intents)
tree = bot.tree

def setup():
    return DISCORD_TOKEN is not None

# ---------------- EVENTS ---------------- #
@bot.event
async def on_ready():
    global is_ready
    is_ready = True
    logger.info(f"Discord bot logged in as {bot.user}")
    try:
        synced = await tree.sync()  # –≥–ª–æ–±–∞–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥
        logger.info(f"Synced {len(synced)} slash commands")
    except Exception as e:
        logger.error(f"Failed to sync commands: {e}")

# ---------------- SLASH COMMANDS ---------------- #
@tree.command(name="help", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –±–æ—Ç—É")
async def slash_help(interaction: discord.Interaction):
    await interaction.response.send_message(HELP_MESSAGE_USER, ephemeral=True)

@tree.command(name="stats", description="–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–∞ Arizona RP")
async def slash_stats(interaction: discord.Interaction, nickname: str, server_id: int):
    await interaction.response.defer()
    valid_nick, nick_err = arizona_api.validate_nickname(nickname)
    valid_server, server_err = arizona_api.validate_server_id(server_id)
    if not valid_nick:
        await interaction.followup.send(f"‚ùå {nick_err}")
        return
    if not valid_server:
        await interaction.followup.send(f"‚ùå {server_err}")
        return

    data, error = await arizona_api.fetch_player_stats(nickname, server_id)
    if error:
        await interaction.followup.send(f"‚ùå {error}")
        return

    formatted_stats = arizona_api.format_stats(data, nickname, server_id) if data else "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"
    if len(formatted_stats) > 2000:
        formatted_stats = formatted_stats[:1997] + "..."
    await interaction.followup.send(formatted_stats)

@tree.command(name="about", description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ")
async def slash_about(interaction: discord.Interaction):
    about_text = (
        f"ü§ñ **MensemBot**\n"
        f"–°–æ–∑–¥–∞—Ç–µ–ª—å: vladlotto/Mensem\n"
        f"–§—É–Ω–∫—Ü–∏–∏: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Arizona RP, –ø–æ–º–æ—â—å –∏ —Å–ø—Ä–∞–≤–∫–∞\n"
        f"–ö–æ–º–∞–Ω–¥—ã: /help, /stats, /about, /servers"
    )
    await interaction.response.send_message(about_text, ephemeral=True)

@tree.command(name="servers", description="–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ Arizona RP")
async def slash_servers(interaction: discord.Interaction):
    servers_list = "\n".join([f"{sid} ‚Äî {name}" for sid, name in arizona_api.get_servers().items()])
    await interaction.response.send_message(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã:\n{servers_list}", ephemeral=True)

# ---------------- OPTIONAL TEXT COMMAND ---------------- #
@bot.command(name="help")
async def text_help(ctx):
    await ctx.send(HELP_MESSAGE_USER)

# ---------------- CLEANUP ---------------- #
@bot.tree.remove_command("finish", type=None)

# ---------------- RUN BOT ---------------- #
if __name__ == "__main__":
    if not setup():
        logger.error("‚ùå DISCORD_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è.")
    else:
        bot.run(DISCORD_TOKEN)
