"""
Discord bot handlers for the unified MensemBot (slash-commands version)
"""

import logging
import discord
from typing import Optional
from arizona_api import arizona_api
from unified_config import DISCORD_TOKEN

logger = logging.getLogger(__name__)

class DiscordBot:
    """Discord bot with Arizona RP statistics and basic commands"""

    def __init__(self):
        self.bot: Optional[discord.Bot] = None
        self.is_ready = False

    def setup(self):
        """Setup Discord bot"""
        if not DISCORD_TOKEN:
            logger.warning("Discord token not provided, Discord bot will not start")
            return False

        try:
            intents = discord.Intents.default()
            intents.guilds = True
            intents.message_content = False  # –¥–ª—è slash-–∫–æ–º–∞–Ω–¥ –Ω–µ –Ω—É–∂–Ω–æ

            # Pycord slash-commands bot
            self.bot = discord.Bot(intents=intents)

            self.setup_events()
            self.setup_commands()

            logger.info("Discord bot configured successfully (slash-commands)")
            return True

        except Exception as e:
            logger.error(f"Failed to setup Discord bot: {e}")
            return False

    def setup_events(self):
        @self.bot.event
        async def on_ready():
            self.is_ready = True
            logger.info(f"Discord –±–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {self.bot.user}")
            print(f"ü§ñ Discord –±–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {self.bot.user}")

            await self.bot.change_presence(
                activity=discord.Game(name="/stats <–Ω–∏–∫> <—Å–µ—Ä–≤–µ—Ä> | /help")
            )

    def setup_commands(self):
        bot = self.bot

        @bot.slash_command(name="help", description="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º")
        async def help_cmd(ctx: discord.ApplicationContext):
            embed = discord.Embed(
                title="ü§ñ MensemBot - –°–ø—Ä–∞–≤–∫–∞",
                color=0x00ff00,
                description="–ú–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç –¥–ª—è Discord –∏ Telegram"
            )
            embed.add_field(
                name="üéÆ Arizona RP",
                value="`/stats <–Ω–∏–∫> <ID —Å–µ—Ä–≤–µ—Ä–∞>` - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞\n"
                      "`/servers` - –û–Ω–ª–∞–π–Ω —Å–µ—Ä–≤–µ—Ä–æ–≤ Arizona RP",
                inline=False
            )
            embed.add_field(
                name="‚ÑπÔ∏è –û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã",
                value="`/help` - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
                      "`/about` - –û –±–æ—Ç–µ",
                inline=False
            )
            embed.set_footer(text="–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã: –ü–ö 1-31, –ú–æ–±–∞–π–ª 101-103")
            await ctx.respond(embed=embed, ephemeral=True)

        @bot.slash_command(name="about", description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ")
        async def about_cmd(ctx: discord.ApplicationContext):
            embed = discord.Embed(
                title="ü§ñ MensemBot",
                color=0x0099ff,
                description="–ú–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä–æ–∫–æ–≤ Arizona RP"
            )
            embed.add_field(
                name="üîß –§—É–Ω–∫—Ü–∏–∏",
                value="‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–æ–≤ Arizona RP\n"
                      "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ–º\n"
                      "‚Ä¢ –ú–æ–¥–µ—Ä–∞—Ü–∏—è —á–∞—Ç–∞\n"
                      "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Discord –∏ Telegram",
                inline=False
            )
            embed.add_field(name="üëë –°–æ–∑–¥–∞—Ç–µ–ª—å", value="@vladlotto", inline=True)
            embed.add_field(name="üì± Telegram", value="@mensembot", inline=True)
            embed.set_footer(text="–í–µ—Ä—Å–∏—è 2.0 ‚Ä¢ Discord + Telegram")
            await ctx.respond(embed=embed)

        @bot.slash_command(name="stats", description="–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–∞ Arizona RP")
        async def stats_cmd(ctx: discord.ApplicationContext, nickname: str, server_id: int):
            await ctx.defer()  # –ø–æ–∫–∞–∂–µ—Ç "–¥—É–º–∞–µ—Ç..."
            # validate nickname
            is_valid_nick, nick_error = arizona_api.validate_nickname(nickname)
            if not is_valid_nick:
                await ctx.respond(f"‚ùå {nick_error}", ephemeral=True)
                return
            # validate server
            is_valid_server, server_error = arizona_api.validate_server_id(server_id)
            if not is_valid_server:
                await ctx.respond(f"‚ùå {server_error}", ephemeral=True)
                return
            # fetch stats
            data, error = await arizona_api.fetch_player_stats(nickname, server_id)
            if error:
                await ctx.respond(f"‚ùå {error}", ephemeral=True)
                return
            if data:
                formatted = arizona_api.format_stats(data, nickname, server_id)
                if len(formatted) > 2000:
                    import io
                    stats_file = io.StringIO(formatted)
                    discord_file = discord.File(fp=stats_file, filename=f"{nickname}_stats.txt")
                    await ctx.respond(
                        f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {nickname} —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∞—è, —Ñ–∞–π–ª –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω",
                        file=discord_file
                    )
                else:
                    embed = discord.Embed(
                        title=f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {nickname}",
                        color=0x00ff00,
                        description=formatted
                    )
                    await ctx.respond(embed=embed)
            else:
                await ctx.respond("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", ephemeral=True)

        @bot.slash_command(name="servers", description="–ü–æ–∫–∞–∑–∞—Ç—å –æ–Ω–ª–∞–π–Ω —Å–µ—Ä–≤–µ—Ä–æ–≤ Arizona RP")
        async def servers_cmd(ctx: discord.ApplicationContext):
            await ctx.defer()
            try:
                servers_info = await arizona_api.get_servers_status_from_api()
                embed = discord.Embed(
                    title="üåê Arizona RP Servers",
                    description=servers_info,
                    color=0x00ff00
                )
                embed.set_footer(text="–û–±–Ω–æ–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
                await ctx.respond(embed=embed)
            except Exception as e:
                logger.error(f"Error fetching servers: {e}")
                fallback = arizona_api.get_servers_info()
                embed = discord.Embed(
                    title="‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏",
                    description=f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å.\n\n{fallback}",
                    color=0xff6600
                )
                await ctx.respond(embed=embed)

    async def start(self):
        if not self.bot:
            logger.warning("Discord bot not configured, skipping start")
            return
        try:
            logger.info("Starting Discord bot...")
            await self.bot.start(DISCORD_TOKEN)
        except Exception as e:
            logger.error(f"Discord bot error: {e}")
            raise

    async def close(self):
        if self.bot:
            try:
                await self.bot.close()
                logger.info("Discord bot closed")
            except Exception as e:
                logger.error(f"Error closing Discord bot: {e}")

discord_bot = DiscordBot()
